{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"architecture/","text":"Understanding the Eyes Biosignals and the Electrooculogram The EyesDrive front-end The EyesDrive front-end is composed by two main section: the biosignal amplifier and the application processor. Both parts work toghether to interpret the EOG signal and trasmit it to third-party devices in a more comprehensible way. Biosignal Amplifier The Biosignal Amplifier conditions the EOG signal to be sampled by the analog-digital converter in the SoC. The actual iteration of the EyesDrive front-end only supports recording one channel at a time. To the final user it means that only one movement axe out of two can be mapped. Future version of the front-end may include a second channel to map the user vision in a 2D space. User safety System on a Chip The EyesDrive front-end is powered by the Nordic nRF52832 SoC: a complete solution including an ARM Cortex-M0 processor clocked at 64MHz, a Bluetooth Low Energy 5.0 radio and essential peripherals to interface with the analog domain of the board. Sight: The EyesDrive Operating System BLE Interface Using the Front-End","title":"Understanding the Eyes"},{"location":"architecture/#understanding-the-eyes","text":"","title":"Understanding the Eyes"},{"location":"architecture/#biosignals-and-the-electrooculogram","text":"","title":"Biosignals and the Electrooculogram"},{"location":"architecture/#the-eyesdrive-front-end","text":"The EyesDrive front-end is composed by two main section: the biosignal amplifier and the application processor. Both parts work toghether to interpret the EOG signal and trasmit it to third-party devices in a more comprehensible way.","title":"The EyesDrive front-end"},{"location":"architecture/#biosignal-amplifier","text":"The Biosignal Amplifier conditions the EOG signal to be sampled by the analog-digital converter in the SoC. The actual iteration of the EyesDrive front-end only supports recording one channel at a time. To the final user it means that only one movement axe out of two can be mapped. Future version of the front-end may include a second channel to map the user vision in a 2D space.","title":"Biosignal Amplifier"},{"location":"architecture/#user-safety","text":"","title":"User safety"},{"location":"architecture/#system-on-a-chip","text":"The EyesDrive front-end is powered by the Nordic nRF52832 SoC: a complete solution including an ARM Cortex-M0 processor clocked at 64MHz, a Bluetooth Low Energy 5.0 radio and essential peripherals to interface with the analog domain of the board.","title":"System on a Chip"},{"location":"architecture/#sight-the-eyesdrive-operating-system","text":"","title":"Sight: The EyesDrive Operating System"},{"location":"architecture/#ble-interface","text":"","title":"BLE Interface"},{"location":"architecture/#using-the-front-end","text":"","title":"Using the Front-End"},{"location":"getting-started/dependencies/","text":"Prepare development host Installing dependencies macOS Be sure your user is entitled to have superuser rights. Open a new terminal window and type: $ brew install python3 Warning Starting from macOS Monterey, Apple locked down non-signed and non-UI apps to use CoreBluetooth. At the moment SIP cannot be used as a module unless the application is packaged, signed and entitled to use CoreBluetooth. In production systems, please use macOS Big Sur. A successful packaged application shows the following prompt at the first opening: Ubuntu, Debian or derivates Be sure your user is entitled to have superuser rights. Open a new terminal window and type: $ sudo apt install python3 python3-pip bluez Windows Warning Windows support is currently experimental, SIP and related applications/modules can be unstable. If you're planning to deploy your application on a PC Operating System, please consider UNIX based alternatives. Open a new PowerShell terminal with administrative rights and type the following command: > Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) > choco install python Warning The ExecutionPolicy for PowerShell is set to Bypass only to install the Chocolatey package manager, at the end of the installation, the ExecutionPolicy will be resetted to Restricted pip install bleak Installing SIP The Sight Input Processor provides in depth debug capabilites while developing for EyesDrive. By connecting EyesDrive to SIP, the eye position can be visualized in real time along with connection statistics, live EOG plots and calibration values. SIP could be also used in legacy codebases that would require major code changes to integrate them with EyesDrive by simulating keystrokes. To integrate your application via SIP, please see (Integrating your application with SIP)[#sip] Open a new terminal window and paste the following command to install SIP: pip install eyesdrive-sip","title":"Prepare development host"},{"location":"getting-started/dependencies/#prepare-development-host","text":"","title":"Prepare development host"},{"location":"getting-started/dependencies/#installing-dependencies","text":"","title":"Installing dependencies"},{"location":"getting-started/dependencies/#macos","text":"Be sure your user is entitled to have superuser rights. Open a new terminal window and type: $ brew install python3 Warning Starting from macOS Monterey, Apple locked down non-signed and non-UI apps to use CoreBluetooth. At the moment SIP cannot be used as a module unless the application is packaged, signed and entitled to use CoreBluetooth. In production systems, please use macOS Big Sur. A successful packaged application shows the following prompt at the first opening:","title":"macOS"},{"location":"getting-started/dependencies/#ubuntu-debian-or-derivates","text":"Be sure your user is entitled to have superuser rights. Open a new terminal window and type: $ sudo apt install python3 python3-pip bluez","title":"Ubuntu, Debian or derivates"},{"location":"getting-started/dependencies/#windows","text":"Warning Windows support is currently experimental, SIP and related applications/modules can be unstable. If you're planning to deploy your application on a PC Operating System, please consider UNIX based alternatives. Open a new PowerShell terminal with administrative rights and type the following command: > Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) > choco install python Warning The ExecutionPolicy for PowerShell is set to Bypass only to install the Chocolatey package manager, at the end of the installation, the ExecutionPolicy will be resetted to Restricted pip install bleak","title":"Windows"},{"location":"getting-started/dependencies/#installing-sip","text":"The Sight Input Processor provides in depth debug capabilites while developing for EyesDrive. By connecting EyesDrive to SIP, the eye position can be visualized in real time along with connection statistics, live EOG plots and calibration values. SIP could be also used in legacy codebases that would require major code changes to integrate them with EyesDrive by simulating keystrokes. To integrate your application via SIP, please see (Integrating your application with SIP)[#sip] Open a new terminal window and paste the following command to install SIP: pip install eyesdrive-sip","title":"Installing SIP"},{"location":"getting-started/simulator/","text":"Setting up the Simulator","title":"Setting up the Simulator"},{"location":"getting-started/simulator/#setting-up-the-simulator","text":"","title":"Setting up the Simulator"},{"location":"getting-started/testing/","text":"Test development setup Using a physical device Using the EyesDrive Simulator (EDS) Warning Using EDS requires a second development machine running all the required dependencies","title":"Testing"},{"location":"getting-started/testing/#test-development-setup","text":"","title":"Test development setup"},{"location":"getting-started/testing/#using-a-physical-device","text":"","title":"Using a physical device"},{"location":"getting-started/testing/#using-the-eyesdrive-simulator-eds","text":"Warning Using EDS requires a second development machine running all the required dependencies","title":"Using the EyesDrive Simulator (EDS)"},{"location":"integrate/standalone/","text":"","title":"Standalone integration"},{"location":"integrate/via-edk/","text":"Integrate via EDK","title":"Integrate via EDK"},{"location":"integrate/via-edk/#integrate-via-edk","text":"","title":"Integrate via EDK"},{"location":"integrate/via-sip/","text":"Integrate via SIP","title":"Integrate via SIP"},{"location":"integrate/via-sip/#integrate-via-sip","text":"","title":"Integrate via SIP"},{"location":"understanding/","text":"Before getting started","title":"Before getting started"},{"location":"understanding/#before-getting-started","text":"","title":"Before getting started"},{"location":"understanding/biosignals/","text":"What are biosignals","title":"What are biosignals"},{"location":"understanding/biosignals/#what-are-biosignals","text":"","title":"What are biosignals"},{"location":"understanding/electrodes/","text":"Electrodes placement","title":"Electrodes placement"},{"location":"understanding/electrodes/#electrodes-placement","text":"","title":"Electrodes placement"},{"location":"understanding/eog/","text":"What is an EOG","title":"What is an EOG"},{"location":"understanding/eog/#what-is-an-eog","text":"","title":"What is an EOG"}]}